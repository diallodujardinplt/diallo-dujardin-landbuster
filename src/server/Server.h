// Generated by dia2code
#ifndef SERVER__SERVER__H
#define SERVER__SERVER__H

#include <vector>
#include <memory>
#include <string>

namespace state {
  class Game;
};
namespace engine {
  class Engine;
  class Command;
};
namespace server {
  class ServiceException;
}

#include "state/Game.h"
#include "engine/Engine.h"
#include "ServerState.h"
#include "engine/Command.h"
#include "ServiceException.h"

namespace server {

  /// class Server - 
  class Server {
    // Associations
    // Attributes
  private:
    std::vector< std::shared_ptr<engine::Command> > history;
    std::shared_ptr<state::Game> game;
    std::shared_ptr<engine::Engine> engine;
    ServerState state;
    unsigned int joinedPlayers;
    // Operations
  public:
    Server ();
    void run ();
    int queryService (std::string& out, const std::string& in, const std::string& url, const std::string& method);
  private:
    void pushCommand (std::shared_ptr<engine::Command> command);
    std::vector< std::shared_ptr<engine::Command> > getCommands (unsigned int from) const;
    void createGame (unsigned int numPlayers);
  };

};

#endif
