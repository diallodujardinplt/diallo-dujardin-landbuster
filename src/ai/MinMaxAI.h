// Generated by dia2code
#ifndef AI__MINMAXAI__H
#define AI__MINMAXAI__H

#include <memory>

namespace state {
  class Game;
};
namespace engine {
  class Engine;
};
namespace ai {
  class AI;
}

#include "state/Game.h"
#include "engine/Engine.h"
#include "AI.h"

namespace ai {

  /// class MinMaxAI - 
  class MinMaxAI : public ai::AI {
    // Operations
  public:
    MinMaxAI (unsigned int playerId);
    void run (std::shared_ptr<state::Game> game, std::shared_ptr<engine::Engine> engine);
  protected:
    unsigned int min (std::shared_ptr<state::Game> game, std::shared_ptr<engine::Engine> engine, unsigned int depth);
    unsigned int max (std::shared_ptr<state::Game> game, std::shared_ptr<engine::Engine> engine, unsigned int depth);
    unsigned int eval (std::shared_ptr<state::Game> game, unsigned int distance);
  };

};

#endif
