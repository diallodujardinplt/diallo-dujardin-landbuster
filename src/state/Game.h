// Generated by dia2code
#ifndef STATE__GAME__H
#define STATE__GAME__H

#include <SFML/Graphics.hpp>

#include <memory>
#include <vector>

namespace state {
  class Game;
  class Player;
  class Land;
}

#include "Step.h"
#include "ItemType.h"
#include "Player.h"
#include "Land.h"

namespace state {

  /// class Game - 
  class Game {
    // Attributes
  private:
    Step currentStep;
    std::vector<std::shared_ptr<Player>>::iterator currentPlayer;
    ItemType activatedItem;
    std::vector<std::shared_ptr<Player>> players;
    std::vector<std::shared_ptr<Land>> lands;
    // Operations
  public:
    ~Game ();
    static Game& getInstance ();
    void init (unsigned int playersNumber);
    std::shared_ptr<Player> getCurrentPlayer () const;
    void nextPlayer ();
    Step getCurrentStep () const;
    void setCurrentStep (Step step);
    ItemType getActivatedItem () const;
    void setActivatedItem (ItemType item);
  private:
    Game ();
  };

};

#endif
